package com.generic.demo;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

import com.generic.demo.bean.Person;
import com.generic.demo.bean.Student;
import com.generic.demo.bean.Worker;

public class TongpeifuDemo1 {

	public static void main(String[] args) {
		ArrayList<Worker> al1 = new ArrayList<Worker>();
		al1.add(new Worker("abc",20));
		al1.add(new Worker("abc2",25));
		ArrayList<Student> al2 = new ArrayList<Student>();
		al2.add(new Student("haha",20));
		al2.add(new Student("haha2",25));
		ArrayList<Integer> al3 = new ArrayList<Integer>();
		al3.add(3);
		al3.add(4);
//		printCollection(al1);
//		printCollection(al2);
		printPersonCol(al1);
		printPersonCol(al2);
//		printPersonCol(al3);//因为printPersonCol函数只能传入Person子类的集合
//		printSuperCol(al1);//因为Worker不是Student的父类，所以不能传入
		printSuperCol(al2);
	}
	//打印集合类型
	public static void printCollection(Collection<?> c)
	{
		Iterator<?> it = c.iterator();
		while(it.hasNext())
		{
			System.out.println(it.next().toString());
		}
	}
	//打印Person子类集合
	/*
	 * 泛型的限定
	 */
	public static void printPersonCol(Collection<? extends Person> c)
	{
		Iterator<? extends Person> it = c.iterator();
		while(it.hasNext())
		{
			Person p = it.next();
			System.out.println(p.getName()+":"+p.getAge());
		}
	}
	/*
	 * 泛型下限
	 * 接收Student或Student的父类型对象
	 */
	public static void printSuperCol(Collection<? super Student> c)
	{
		Iterator<? super Student> it = c.iterator();
		while(it.hasNext())
		{
			System.out.println(it.next());
		}
	}
}
